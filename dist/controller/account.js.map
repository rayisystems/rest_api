{"version":3,"sources":["../../src/controller/account.js"],"names":["config","db","api","post","req","res","register","username","body","email","password","err","account","status","send","authenticate","session","scope","get","logout","sent","json","user"],"mappings":";;;;;;AAAA;;;;AACA;;AACA;;;;AACA;;;;AAEA;;;;AACA;;;;AAEA;;;;kBAEe,gBAAoB;AAAA,QAAjBA,MAAiB,QAAjBA,MAAiB;AAAA,QAATC,EAAS,QAATA,EAAS;;AAC/B,QAAIC,MAAM,sBAAV;;AAEA;AACAA,QAAIC,IAAJ,CAAS,WAAT,EAAsB,UAACC,GAAD,EAAMC,GAAN,EAAc;AAChC,0BAAQC,QAAR,CAAiB,sBAAY,EAAEC,UAAUH,IAAII,IAAJ,CAASC,KAArB,EAAZ,CAAjB,EAA2DL,IAAII,IAAJ,CAASE,QAApE,EAA8E,UAASC,GAAT,EAAcC,OAAd,EAAuB;AACnG,gBAAID,GAAJ,EAAS;AACP,uBAAON,IAAIQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,wBAAwBH,GAA7C,CAAP;AACD;;AAED,+BAASI,YAAT,CACE,OADF,EACW;AACPC,yBAAS;AADF,aADX,EAGGZ,GAHH,EAGQC,GAHR,EAGa,YAAM;AACjBA,oBAAIQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,kCAArB;AACD,aALD;AAMD,SAXD;AAYD,KAbH;;AAeA;AACAZ,QAAIC,IAAJ,CAAS,QAAT,EAAmB,mBAASY,YAAT,CACf,OADe,EACN;AACLC,iBAAS,KADJ;AAELC,eAAO;AAFF,KADM,CAAnB;;AAMA;;AAEAf,QAAIgB,GAAJ,CAAQ,SAAR,gCAAiC,UAACd,GAAD,EAAMC,GAAN,EAAc;AAC3CA,YAAIc,MAAJ;AACAd,YAAIQ,MAAJ,CAAW,GAAX,EAAgBO,IAAhB,CAAqB,kCAArB;AACH,KAHD;;AAKAlB,QAAIgB,GAAJ,CAAQ,KAAR,gCAA6B,UAACd,GAAD,EAAMC,GAAN,EAAc;AACvCA,YAAIQ,MAAJ,CAAW,GAAX,EAAgBQ,IAAhB,CAAqBjB,IAAIkB,IAAzB;AACH,KAFD;;AAIA,WAAOpB,GAAP;AACH,C","file":"account.js","sourcesContent":["import mongoose from 'mongoose';\r\nimport {  Router } from 'express';\r\nimport bodyParser from 'body-parser';\r\nimport passport from 'passport';\r\n\r\nimport config from '../config';\r\nimport Account from '../model/account';\r\n\r\nimport { generateAccessToken, respond, authenticate } from '../middleware/authMiddleware';\r\n\r\nexport default ({ config, db }) => {\r\n    let api = Router();\r\n\r\n    // /account/register\r\n    api.post('/register', (req, res) => {\r\n        Account.register(new Account({ username: req.body.email}), req.body.password, function(err, account) {\r\n          if (err) {\r\n            return res.status(500).send('An error occurred: ' + err);\r\n          }\r\n    \r\n          passport.authenticate(\r\n            'local', {\r\n              session: false\r\n          })(req, res, () => {\r\n            res.status(200).send('Successfully created new account');\r\n          });\r\n        });\r\n      });\r\n\r\n    // '/account/login'\r\n    api.post('/login', passport.authenticate(\r\n        'local', {\r\n            session: false,\r\n            scope: []\r\n        }), generateAccessToken, respond);\r\n\r\n    // /account/logout\r\n\r\n    api.get('/logout', authenticate, (req, res) => {\r\n        res.logout();\r\n        res.status(200).sent('Successfully logged out the user')\r\n    });\r\n\r\n    api.get('/me', authenticate, (req, res) => {\r\n        res.status(200).json(req.user);\r\n    })\r\n\r\n    return api;\r\n}"]}