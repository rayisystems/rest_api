{"version":3,"sources":["../src/index.js"],"names":["LocalStrategy","require","Strategy","app","server","createServer","use","json","limit","bodyLimit","initialize","Account","usernameField","passwordField","authenticate","serializeUser","deserializeUser","listen","port","console","log","address"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AAIA;;;;AACA;;;;;;AAHA,IAAMA,gBAAgBC,QAAQ,gBAAR,EAA0BC,QAAhD;;AAKA,IAAMC,MAAM,wBAAZ;AACAA,IAAIC,MAAJ,GAAa,eAAKC,YAAL,CAAkBF,GAAlB,CAAb;;AAEA;AACAA,IAAIG,GAAJ,CAAQ,qBAAWC,IAAX,CAAgB;AACpBC,WAAO,iBAAOC;AADM,CAAhB,CAAR;;AAIA;AACAN,IAAIG,GAAJ,CAAQ,mBAASI,UAAT,EAAR;AACA,IAAIC,UAAUV,QAAQ,iBAAR,CAAd;AACA,mBAASK,GAAT,CACI,IAAIN,aAAJ,CAAkB;AACVY,mBAAe,OADL;AAEVC,mBAAe;AAFL,CAAlB,EAIIF,QAAQG,YAAR,EAJJ,CADJ;;AASA,mBAASC,aAAT,CAAuBJ,QAAQI,aAAR,EAAvB;AACA,mBAASC,eAAT,CAAyBL,QAAQK,eAAR,EAAzB;;AAEA;AACAb,IAAIG,GAAJ,CAAQ,qBAAR;;AAEA;AACAH,IAAIG,GAAJ,CAAQ,GAAR;;AAEAH,IAAIC,MAAJ,CAAWa,MAAX,CAAkB,iBAAOC,IAAzB;AACAC,QAAQC,GAAR,wBAAiCjB,IAAIC,MAAJ,CAAWiB,OAAX,GAAqBH,IAAtD;;kBAEef,G","file":"index.js","sourcesContent":["import http from 'http';\r\nimport express from 'express';\r\nimport mongoose from 'mongoose';\r\nimport bodyParser from 'body-parser';\r\nimport passport from 'passport';\r\nimport cors from 'cors'\r\n\r\nconst LocalStrategy = require('passport-local').Strategy;\r\n\r\nimport config from './config';\r\nimport routes from './routes';\r\n\r\nconst app = express();\r\napp.server = http.createServer(app);\r\n\r\n// Middleware\r\napp.use(bodyParser.json({\r\n    limit: config.bodyLimit\r\n}));\r\n\r\n// Passport Config\r\napp.use(passport.initialize());\r\nlet Account = require('./model/account');\r\npassport.use(\r\n    new LocalStrategy({\r\n            usernameField: 'email',\r\n            passwordField: 'password'\r\n        },\r\n        Account.authenticate()\r\n    )\r\n);\r\n\r\npassport.serializeUser(Account.serializeUser());\r\npassport.deserializeUser(Account.deserializeUser());\r\n\r\n// CORS\r\napp.use(cors());\r\n\r\n// API routes\r\napp.use('/', routes);\r\n\r\napp.server.listen(config.port);\r\nconsole.log(`server started on ${app.server.address().port}`);\r\n\r\nexport default app;"]}